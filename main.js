(()=>{"use strict";const t=document.getElementById("search");async function e(t){!function(t){const e=document.getElementById("city"),n=document.getElementById("country"),c=document.getElementById("temp-value"),u=(document.getElementById("temp-unit"),document.getElementById("weather-icon")),a=document.getElementById("humidity-value"),o=document.getElementById("aqi-status"),r=document.getElementById("feels-like-value");e.textContent=t.location.name,n.textContent=t.location.country,c.textContent=t.current.temp_c,a.textContent=t.current.humidity,u.src=t.current.condition.icon,r.textContent=t.current.feelslike_c;const i=function(t){switch(t){case 1:return"Good";case 2:return"Moderate";case 3:return"Unhealthy for sensitive group";case 4:return"Unhealthy";case 5:return"Very unhealthy";case 6:return"Hazardous";default:return"AQI Unavailable"}}(t.current.air_quality["us-epa-index"]);o.textContent=i}(await async function(t){const e=function(t,e){return`https://api.weatherapi.com/v1/current.json?key=d30c2a12f2b2479c9ad163928233006&q=${e}&aqi=yes`}(0,t);return await async function(t){try{const e=await fetch(t,{mode:"cors"});return await e.json()}catch(t){return console.log(t),t}}(e)}(t))}document.getElementById("submit").addEventListener("click",(n=>{e(t.value),n.preventDefault()})),e("Mumbai")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBRUEsTUFBTUEsRUFBU0MsU0FBU0MsZUFBZSxVQWtEdkNDLGVBQWVDLEVBQXdCQyxJQTVCdkMsU0FBb0JDLEdBRWhCLE1BQU1DLEVBQU9OLFNBQVNDLGVBQWUsUUFDL0JNLEVBQVVQLFNBQVNDLGVBQWUsV0FDbENPLEVBQVlSLFNBQVNDLGVBQWUsY0FFcENRLEdBRFdULFNBQVNDLGVBQWUsYUFDckJELFNBQVNDLGVBQWUsaUJBQ3RDUyxFQUFXVixTQUFTQyxlQUFlLGtCQUNuQ1UsRUFBWVgsU0FBU0MsZUFBZSxjQUNwQ1csRUFBWVosU0FBU0MsZUFBZSxvQkFFMUNLLEVBQUtPLFlBQWNSLEVBQVlTLFNBQVNDLEtBQ3hDUixFQUFRTSxZQUFjUixFQUFZUyxTQUFTUCxRQUMzQ0MsRUFBVUssWUFBY1IsRUFBWVcsUUFBUUMsT0FDNUNQLEVBQVNHLFlBQWNSLEVBQVlXLFFBQVFOLFNBQzNDRCxFQUFZUyxJQUFNYixFQUFZVyxRQUFRRyxVQUFVQyxLQUNoRFIsRUFBVUMsWUFBY1IsRUFBWVcsUUFBUUssWUFFNUMsTUFBTUMsRUFyQ1YsU0FBdUJDLEdBQ25CLE9BQVFBLEdBQ04sS0FBSyxFQUNILE1BQU8sT0FDVCxLQUFLLEVBQ0gsTUFBTyxXQUNULEtBQUssRUFDSCxNQUFPLGdDQUNULEtBQUssRUFDSCxNQUFPLFlBQ1QsS0FBSyxFQUNILE1BQU8saUJBQ1QsS0FBSyxFQUNILE1BQU8sWUFDVCxRQUNFLE1BQU8sa0JBRWYsQ0FvQm9CQyxDQUFjbkIsRUFBWVcsUUFBUVMsWUFBWSxpQkFDOURkLEVBQVVFLFlBQWNTLENBQzVCLENBVUlJLE9BUkp4QixlQUE4QkUsR0FDMUIsTUFBTXVCLEVDL0NWLFNBQW1CQyxFQUFNeEIsR0FFckIsTUFEWSxvRkFBb0ZBLFdBRXBHLENENENnQixDQUFjLEVBQVdBLEdBRXJDLGFDNUNKRixlQUE4QnlCLEdBQzFCLElBQ0ksTUFBTUUsUUFBaUJDLE1BQU1ILEVBQUssQ0FBQ0ksS0FBTSxTQUV6QyxhQUQwQkYsRUFBU0csTUFFdkMsQ0FDQSxNQUFNQyxHQUVGLE9BREFDLFFBQVFDLElBQUlGLEdBQ0xBLENBQ1gsQ0FDSixDRGlDOEIsQ0FBbUJOLEVBRWpELENBRzhCLENBQWV2QixHQUU3QyxDQXBEZUosU0FBU0MsZUFBZSxVQXNEaENtQyxpQkFBaUIsU0FBVUMsSUFFOUJsQyxFQURvQkosRUFBT3VDLE9BRTNCRCxFQUFFRSxnQkFBZ0IsSUFHdEJwQyxFQUF3QixTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvbW9kdWxlcy9hcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYXBpIGZyb20gJy4vbW9kdWxlcy9hcGkuanMnO1xuXG5jb25zdCBzZWFyY2ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VhcmNoJyk7XG5jb25zdCBzdWJtaXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VibWl0Jyk7XG5cbmZ1bmN0aW9uIGFxaVN0YXR1c1RleHQoaSkge1xuICAgIHN3aXRjaCAoaSkge1xuICAgICAgY2FzZSAxOlxuICAgICAgICByZXR1cm4gJ0dvb2QnO1xuICAgICAgY2FzZSAyOlxuICAgICAgICByZXR1cm4gJ01vZGVyYXRlJztcbiAgICAgIGNhc2UgMzpcbiAgICAgICAgcmV0dXJuICdVbmhlYWx0aHkgZm9yIHNlbnNpdGl2ZSBncm91cCc7XG4gICAgICBjYXNlIDQ6XG4gICAgICAgIHJldHVybiAnVW5oZWFsdGh5JztcbiAgICAgIGNhc2UgNTpcbiAgICAgICAgcmV0dXJuICdWZXJ5IHVuaGVhbHRoeSc7XG4gICAgICBjYXNlIDY6XG4gICAgICAgIHJldHVybiAnSGF6YXJkb3VzJztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiAnQVFJIFVuYXZhaWxhYmxlJztcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUNhcmQod2VhdGhlckRhdGEpe1xuXG4gICAgY29uc3QgY2l0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaXR5Jyk7XG4gICAgY29uc3QgY291bnRyeSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb3VudHJ5Jyk7XG4gICAgY29uc3QgdGVtcFZhbHVlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RlbXAtdmFsdWUnKTtcbiAgICBjb25zdCB0ZW1wVW5pdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0ZW1wLXVuaXQnKTtcbiAgICBjb25zdCB3ZWF0aGVySWNvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3ZWF0aGVyLWljb24nKTtcbiAgICBjb25zdCBodW1pZGl0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdodW1pZGl0eS12YWx1ZScpO1xuICAgIGNvbnN0IGFxaVN0YXR1cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcWktc3RhdHVzJyk7XG4gICAgY29uc3QgZmVlbHNMaWtlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZlZWxzLWxpa2UtdmFsdWUnKTtcblxuICAgIGNpdHkudGV4dENvbnRlbnQgPSB3ZWF0aGVyRGF0YS5sb2NhdGlvbi5uYW1lO1xuICAgIGNvdW50cnkudGV4dENvbnRlbnQgPSB3ZWF0aGVyRGF0YS5sb2NhdGlvbi5jb3VudHJ5O1xuICAgIHRlbXBWYWx1ZS50ZXh0Q29udGVudCA9IHdlYXRoZXJEYXRhLmN1cnJlbnQudGVtcF9jO1xuICAgIGh1bWlkaXR5LnRleHRDb250ZW50ID0gd2VhdGhlckRhdGEuY3VycmVudC5odW1pZGl0eTtcbiAgICB3ZWF0aGVySWNvbi5zcmMgPSB3ZWF0aGVyRGF0YS5jdXJyZW50LmNvbmRpdGlvbi5pY29uO1xuICAgIGZlZWxzTGlrZS50ZXh0Q29udGVudCA9IHdlYXRoZXJEYXRhLmN1cnJlbnQuZmVlbHNsaWtlX2M7XG5cbiAgICBjb25zdCBhcWlUZXh0ID0gYXFpU3RhdHVzVGV4dCh3ZWF0aGVyRGF0YS5jdXJyZW50LmFpcl9xdWFsaXR5Wyd1cy1lcGEtaW5kZXgnXSk7XG4gICAgYXFpU3RhdHVzLnRleHRDb250ZW50ID0gYXFpVGV4dDtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0V2VhdGhlckRhdGEoc2VhcmNoVmFsdWUpe1xuICAgIGNvbnN0IHVybCA9IGFwaS5mb3JtYXRVcmwoJ2N1cnJlbnQnLCBzZWFyY2hWYWx1ZSk7XG4gICAgY29uc3Qgd2VhdGhlckRhdGEgPSBhd2FpdCBhcGkuZ2V0V2VhdGhlckRhdGEodXJsKTtcbiAgICByZXR1cm4gd2VhdGhlckRhdGE7XG59O1xuXG5hc3luYyBmdW5jdGlvbiBnZXRXZWF0aGVyRGF0YUFuZFJlbmRlcihzZWFyY2hWYWx1ZSl7XG4gICAgY29uc3Qgd2VhdGhlckRhdGEgPSBhd2FpdCBnZXRXZWF0aGVyRGF0YShzZWFyY2hWYWx1ZSk7XG4gICAgdXBkYXRlQ2FyZCh3ZWF0aGVyRGF0YSk7XG59O1xuXG5zdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgIGNvbnN0IHNlYXJjaFZhbHVlID0gc2VhcmNoLnZhbHVlO1xuICAgIGdldFdlYXRoZXJEYXRhQW5kUmVuZGVyKHNlYXJjaFZhbHVlKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG59KTtcblxuZ2V0V2VhdGhlckRhdGFBbmRSZW5kZXIoJ011bWJhaScpOyIsImZ1bmN0aW9uIGZvcm1hdFVybChkYXRhLCBzZWFyY2hWYWx1ZSl7XG4gICAgY29uc3QgdXJsID0gYGh0dHBzOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxLyR7ZGF0YX0uanNvbj9rZXk9ZDMwYzJhMTJmMmIyNDc5YzlhZDE2MzkyODIzMzAwNiZxPSR7c2VhcmNoVmFsdWV9JmFxaT15ZXNgXG4gICAgcmV0dXJuIHVybDtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0V2VhdGhlckRhdGEodXJsKXtcbiAgICB0cnl7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7bW9kZTogJ2NvcnMnfSk7XG4gICAgICAgIGNvbnN0IHdlYXRoZXJEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICByZXR1cm4gd2VhdGhlckRhdGE7XG4gICAgfVxuICAgIGNhdGNoKGVycm9yKXtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgfTtcbn1cblxuZXhwb3J0IHtmb3JtYXRVcmwsIGdldFdlYXRoZXJEYXRhfTtcblxuIl0sIm5hbWVzIjpbInNlYXJjaCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhc3luYyIsImdldFdlYXRoZXJEYXRhQW5kUmVuZGVyIiwic2VhcmNoVmFsdWUiLCJ3ZWF0aGVyRGF0YSIsImNpdHkiLCJjb3VudHJ5IiwidGVtcFZhbHVlIiwid2VhdGhlckljb24iLCJodW1pZGl0eSIsImFxaVN0YXR1cyIsImZlZWxzTGlrZSIsInRleHRDb250ZW50IiwibG9jYXRpb24iLCJuYW1lIiwiY3VycmVudCIsInRlbXBfYyIsInNyYyIsImNvbmRpdGlvbiIsImljb24iLCJmZWVsc2xpa2VfYyIsImFxaVRleHQiLCJpIiwiYXFpU3RhdHVzVGV4dCIsImFpcl9xdWFsaXR5IiwidXBkYXRlQ2FyZCIsInVybCIsImRhdGEiLCJyZXNwb25zZSIsImZldGNoIiwibW9kZSIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInZhbHVlIiwicHJldmVudERlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9